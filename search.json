[{"title":"Hexo","url":"/2019/03/04/Hexo/","content":"#### Github创建远程库\n在GitHub上创建一个tony1015.github.io的远程库\n\n\n#### 下载安装hexo\n```\n$ npm install -g hexo-cli\n```\n**安装好hexo以后，在终端输入：**\n```\n$ hexo\n```\n得到如下信息\n```\n➜  tony1015.github.io git:(develop) ✗ hexo\nUsage: hexo <command>\nCommands:\n  clean     Removed generated files and cache.\n  config    Get or set configurations.\n  deploy    Deploy your website.\n  generate  Generate static files.\n  ----------------------部分省略\nor you can check the docs: http://hexo.io/docs/\n```\n**初始化博客**\n```\n// 建立一个博客文件夹，并初始化博客，tony1015.github.io为文件夹的名称，可以随便起名字\n$ hexo init tony1015.github.io\n// 进入博客文件夹，tony1015.github.io为文件夹的名称\n$ cd tony1015.github.io\n// node.js的命令，根据博客既定的dependencies配置安装所有的依赖包\n$ npm install\n```\n**安装主题**\n```\n$ git clone https://github.com/aircloud/hexo-theme-aircloud themes/aircloud\n```\n**启用主题**\n与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件_config.yml， 找到 theme 字段，并将其值更改为 aircloud。\n```\n启用主题\ntheme: next\n```\nno\n**验证主题**\n首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是hexo s –debug。\n```\n$ hexo s --debug\n```\n在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：\n```\nINFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.\n```\n此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运。不出所料应该已经能看到样式了\n\n#### hexo-admin配置\nhttps://github.com/jaredly/hexo-admin\n```\nnpm install --save hexo-admin\nhexo server -d\nopen http://localhost:4000/admin/\n```\n密码设置，需要在根母目录下的/_config.yml文件里面加入如下代码\n```\nadmin:\n  username: guoyoujin\n  password_hash: $2a$10$8f0CO288aEgpb0BQk0mAEOIDwPS.s6nl703xL6PLTVzM.758x8xsi\n  secret: a secret something\n```\n注意上面的password_hash需要使用nodejs语语法生成\n```\n$ npm install bcrypt-nodejs --save\n$ node\n> const bcrypt = require('bcrypt-nodejs')\n> bcrypt.hashSync('your password secret here!')\n//=> '$2a$10$8f0CO288aEgpb0BQk0mAEOIDwPS.s6nl703xL6PLTVzM.758x8xsi'\n```\n把上面输出的值替换成password_hash的值即可\n#### 同步到Github\n安装 hexo-deployer-git。\n```\n$ npm install hexo-deployer-git --save\n```\n修改配置。\n```\ndeploy:\n  type: git\n  repo: <repository url> #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch] #published\n  message: [message]\n```\n\n参数|描述\n--|--\nrepo|\t库（Repository）地址\nbranch|\t分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。\nmessage|\t自定义提交信息(默认为 Site updated: （'YYYY-MM-DD HH:mm:ss'）)\n\n使用 Hexo 生成静态文件快速而且简单。\n```\n$ hexo generate\n```\n生成站点文件并推送至远程库。执行hexo clean && hexo deploy命令。前者清除站点文件，后者重新生成站点文件并将之推送到指定的库分支。（如果您的Hexo是局部安装，则需要执行./node_modules/.bin/hexo clean && ./node_modules/.bin/hexo deploy。）\n发布\n运行一下命令将Hexo上传到Github"},{"title":"Hello World","url":"/2019/03/04/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]